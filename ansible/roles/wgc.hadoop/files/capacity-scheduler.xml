<configuration>
<!--
  Licensed under the Apache License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License. See accompanying LICENSE file.
-->
  <!--指定用户或组到特定队列的映射。
  可以将单个用户或用户列表映射到队列。 [u or g]:[name]:[queue_name][,next_mapping]*
  u或g表示映射是针对用户还是针对组。要指定提交了申请的用户，可以使用％user。要指定与用户名相同的队列名，可以使用％user。 要指定与用户所属的主要组名称相同的队列名称，
  可以使用％primary_group。 辅助组可以引用为％secondary_group-->
  <property>
    <name>yarn.scheduler.capacity.queue-mappings</name>
    <value>u:wgc:wgc,u:eda:eda</value>
    <description>
      A list of mappings that will be used to assign jobs to queues
      The syntax for this list is [u|g]:[name]:[queue_name][,next mapping]*
      Typically this list will be used to map users to queues,
      for example, u:%user:%user maps all users to queues with the same name
      as the user.
    </description>
  </property>
  <!--默认10000-->
  <property>
    <name>yarn.scheduler.capacity.maximum-applications</name>
    <value>10000</value>
    <description>
      Maximum number of applications that can be pending and running.
    </description>
  </property>

  <!--集群中可用于运行application master的资源比例上限，这通常用于限制并发运行的应用程序数目,默认0.1-->
  <property>
    <name>yarn.scheduler.capacity.maximum-am-resource-percent</name>
    <value>0.4</value>
    <description>
      Maximum percent of resources in the cluster which can be used to run
      application masters i.e. controls number of concurrent running
      applications.
    </description>
  </property>

  <property>
    <name>yarn.scheduler.capacity.resource-calculator</name>
    <value>org.apache.hadoop.yarn.util.resource.DominantResourceCalculator</value>
    <description>
      The ResourceCalculator implementation to be used to compare
      Resources in the scheduler.
      The default i.e. DefaultResourceCalculator only uses Memory while
      DominantResourceCalculator uses dominant-resource to compare
      multi-dimensional resources such as Memory, CPU etc.
    </description>
  </property>

  <property>
    <name>yarn.scheduler.capacity.root.queues</name>
    <value>default,wgc,eda</value>
    <description>
      The queues at the this level (root is the root queue).
    </description>
  </property>

  <!--哪些用户和组有权限提交任务到队列中。root父队列的权限需要控制住
  子队列会继承父队列的权限，在父队列有权限的话，就能在子队列提交任务，acl检查从子节点到root节点
  空格表示任何人都无法往root队列提交作业-->
  <property>
    <name>yarn.scheduler.capacity.root.acl_submit_applications</name>
    <value> </value>
  </property>
  <!--设置哪些用户或组能管理队列例如中止队列中作业等-->
  <property>
    <name>yarn.scheduler.capacity.root.acl_administer_queue</name>
    <value> </value>
  </property>

  <!--设置可以访问属于默认分区的节点的队列百分比。每个父节点下直系子节点的默认容量总和必须等于100。-->
  <property>
    <name>yarn.scheduler.capacity.root.default.capacity</name>
    <value>100</value>
    <description>Default queue target capacity.</description>
  </property>

  <!-- 定义队列可以访问的节点标签。
  “ *”表示队列可以访问所有节点标签；“”（空格）表示队列只能访问默认分区-->
  <property>
    <name>yarn.scheduler.capacity.root.default.accessible-node-labels</name>
    <value> </value>
  </property>
  <!--定义队列的默认节点标签表达式。
  如果提交到队列的应用程序没有自己的节点标签表达式，则使用队列的默认节点标签表达式。
  如果yarn.scheduler.capacity.<queue-path>.default-node-label-expression设置了value，那么提交到queue中的任务如果没有说明用什么label，
  则使用这个value所定义的label；如果这个value为空，那么提交到这个队列的任务只能在不含有label的node上执行。此处的value只能是一个label，不能是多个label。-->
  <property>
    <name>yarn.scheduler.capacity.root.default.default-node-label-expression</name>
    <value> </value>
  </property>

  <!--root队列可以访问所有的节点标签-->
  <property>
    <name>yarn.scheduler.capacity.root.accessible-node-labels</name>
    <value>*</value>
  </property>
  <!--定义队列（root）可以访问标签分区(wgcLabel)节点的百分比-->
  <property>
    <name>yarn.scheduler.capacity.root.accessible-node-labels.wgcLabel.capacity</name>
    <value>100</value>
  </property>
  <property>
    <name>yarn.scheduler.capacity.root.accessible-node-labels.edaLabel.capacity</name>
    <value>100</value>
  </property>
  <!--root.wgc队列能访问的标签是wgcLabel-->
  <property>
    <name>yarn.scheduler.capacity.root.wgc.accessible-node-labels</name>
    <value>wgcLabel</value>
  </property>
  <!--root.wgc默认访问的标签是wgcLabel-->
  <property>
    <name>yarn.scheduler.capacity.root.wgc.default-node-label-expression</name>
    <value>wgcLabel</value>
  </property>
  <!--定义队列（root.wgc）可以访问标签(wgcLabel)分区节点的百分比-->
  <property>
    <name>yarn.scheduler.capacity.root.wgc.accessible-node-labels.wgcLabel.capacity</name>
    <value>100</value>
  </property>
  <!--类似于yarn.scheduler.capacity.<queue-path>.maximum-capacity，它用于每个队列的标签的最大容量。默认情况下为100。-->
  <property>
    <name>yarn.scheduler.capacity.root.wgc.accessible-node-labels.wgcLabel.maximum-capacity</name>
    <value>100</value>
  </property>

  <!--哪些用户或组可以向root.wgc队列提交作业-->
  <property>
    <name>yarn.scheduler.capacity.root.wgc.acl_submit_applications</name>
    <value>wgc</value>
  </property>
  <!--哪些用户或组可以管理队列wgc-->
  <property>
    <name>yarn.scheduler.capacity.root.wgc.acl_administer_queue</name>
    <value>wgc</value>
  </property>
  <!--队列wgc最大提交的作业-->
  <property>
    <name>yarn.scheduler.capacity.root.wgc.maximum-applications</name>
    <value>100</value>
  </property>
  <!--按照定义wgc队列和标签的方法再定义队列eda和标签-->
  <property>
    <name>yarn.scheduler.capacity.root.eda.accessible-node-labels</name>
    <value>edaLabel</value>
  </property>
  <property>
    <name>yarn.scheduler.capacity.root.eda.default-node-label-expression</name>
    <value>edaLabel</value>
  </property>
  <property>
    <name>yarn.scheduler.capacity.root.eda.accessible-node-labels.edaLabel.capacity</name>
    <value>100</value>
  </property>
  <property>
    <name>yarn.scheduler.capacity.root.eda.accessible-node-labels.edaLabel.maximum-capacity</name>
    <value>100</value>
  </property>
  <property>
    <name>yarn.scheduler.capacity.root.eda.acl_submit_applications</name>
    <value>eda</value>
  </property>
  <property>
    <name>yarn.scheduler.capacity.root.eda.acl_administer_queue</name>
    <value>eda</value>
  </property>
  <property>
    <name>yarn.scheduler.capacity.root.eda.maximum-applications</name>
    <value>40</value>
  </property>

  <!--这个参数的含义是允许单个用户最多可获取的队列资源的倍数。默认值为1，确保单个用户无论集群有多空闲，永远不会占用超过队列配置的资源，
  即yarn.scheduler.capacity.<queue-path>.capacity的值，该参数是一个浮点值。按照这个理解，当把这个参数设置为超过1时，
  用户可以使用的资源将超过队列配置的资源，但应该不能超过队列配置的最大资源，否则最大资源的配置就没有意义了；如果这个参数的值小于1时，
  用户可以使用的资源将低于队列配置的资源-->
  <property>
    <name>yarn.scheduler.capacity.root.default.user-limit-factor</name>
    <value>1</value>
    <description>
      Default queue user limit a percentage from 0.0 to 1.0.
    </description>
  </property>

  <property>
    <name>yarn.scheduler.capacity.root.default.maximum-capacity</name>
    <value>100</value>
    <description>
      The maximum capacity of the default queue.
    </description>
  </property>

  <property>
    <name>yarn.scheduler.capacity.root.default.state</name>
    <value>RUNNING</value>
    <description>
      The state of the default queue. State can be one of RUNNING or STOPPED.
    </description>
  </property>

  <property>
    <name>yarn.scheduler.capacity.root.default.acl_submit_applications</name>
    <value>*</value>
    <description>
      The ACL of who can submit jobs to the default queue.
    </description>
  </property>

  <property>
    <name>yarn.scheduler.capacity.root.default.acl_administer_queue</name>
    <value>*</value>
    <description>
      The ACL of who can administer jobs on the default queue.
    </description>
  </property>

  <property>
    <name>yarn.scheduler.capacity.root.default.acl_application_max_priority</name>
    <value>*</value>
    <description>
      The ACL of who can submit applications with configured priority.
      For e.g, [user={name} group={name} max_priority={priority} default_priority={priority}]
    </description>
  </property>

   <property>
     <name>yarn.scheduler.capacity.root.default.maximum-application-lifetime
     </name>
     <value>-1</value>
     <description>
        Maximum lifetime of an application which is submitted to a queue
        in seconds. Any value less than or equal to zero will be considered as
        disabled.
        This will be a hard time limit for all applications in this
        queue. If positive value is configured then any application submitted
        to this queue will be killed after exceeds the configured lifetime.
        User can also specify lifetime per application basis in
        application submission context. But user lifetime will be
        overridden if it exceeds queue maximum lifetime. It is point-in-time
        configuration.
        Note : Configuring too low value will result in killing application
        sooner. This feature is applicable only for leaf queue.
     </description>
   </property>

   <property>
     <name>yarn.scheduler.capacity.root.default.default-application-lifetime
     </name>
     <value>-1</value>
     <description>
        Default lifetime of an application which is submitted to a queue
        in seconds. Any value less than or equal to zero will be considered as
        disabled.
        If the user has not submitted application with lifetime value then this
        value will be taken. It is point-in-time configuration.
        Note : Default lifetime can't exceed maximum lifetime. This feature is
        applicable only for leaf queue.
     </description>
   </property>

  <property>
    <name>yarn.scheduler.capacity.node-locality-delay</name>
    <value>40</value>
    <description>
      Number of missed scheduling opportunities after which the CapacityScheduler
      attempts to schedule rack-local containers.
      When setting this parameter, the size of the cluster should be taken into account.
      We use 40 as the default value, which is approximately the number of nodes in one rack.
      Note, if this value is -1, the locality constraint in the container request
      will be ignored, which disables the delay scheduling.
    </description>
  </property>

  <property>
    <name>yarn.scheduler.capacity.rack-locality-additional-delay</name>
    <value>-1</value>
    <description>
      Number of additional missed scheduling opportunities over the node-locality-delay
      ones, after which the CapacityScheduler attempts to schedule off-switch containers,
      instead of rack-local ones.
      Example: with node-locality-delay=40 and rack-locality-delay=20, the scheduler will
      attempt rack-local assignments after 40 missed opportunities, and off-switch assignments
      after 40+20=60 missed opportunities.
      When setting this parameter, the size of the cluster should be taken into account.
      We use -1 as the default value, which disables this feature. In this case, the number
      of missed opportunities for assigning off-switch containers is calculated based on
      the number of containers and unique locations specified in the resource request,
      as well as the size of the cluster.
    </description>
  </property>

  <property>
    <name>yarn.scheduler.capacity.queue-mappings-override.enable</name>
    <value>false</value>
    <description>
      If a queue mapping is present, will it override the value specified
      by the user? This can be used by administrators to place jobs in queues
      that are different than the one specified by the user.
      The default is false.
    </description>
  </property>

  <property>
    <name>yarn.scheduler.capacity.per-node-heartbeat.maximum-offswitch-assignments</name>
    <value>1</value>
    <description>
      Controls the number of OFF_SWITCH assignments allowed
      during a node's heartbeat. Increasing this value can improve
      scheduling rate for OFF_SWITCH containers. Lower values reduce
      "clumping" of applications on particular nodes. The default is 1.
      Legal values are 1-MAX_INT. This config is refreshable.
    </description>
  </property>


  <property>
    <name>yarn.scheduler.capacity.application.fail-fast</name>
    <value>false</value>
    <description>
      Whether RM should fail during recovery if previous applications'
      queue is no longer valid.
    </description>
  </property>

  <property>
    <name>yarn.scheduler.capacity.workflow-priority-mappings</name>
    <value></value>
    <description>
      A list of mappings that will be used to override application priority.
      The syntax for this list is
      [workflowId]:[full_queue_name]:[priority][,next mapping]*
      where an application submitted (or mapped to) queue "full_queue_name"
      and workflowId "workflowId" (as specified in application submission
      context) will be given priority "priority".
    </description>
  </property>

  <property>
    <name>yarn.scheduler.capacity.workflow-priority-mappings-override.enable</name>
    <value>false</value>
    <description>
      If a priority mapping is present, will it override the value specified
      by the user? This can be used by administrators to give applications a
      priority that is different than the one specified by the user.
      The default is false.
    </description>
  </property>
</configuration>

